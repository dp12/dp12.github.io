<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Super Pork Chop</title>
    <link>http://www.example.com/</link>
    <description>Recent content on Super Pork Chop</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 01 Dec 2019 00:00:00 -0500</lastBuildDate>
    
	<atom:link href="http://www.example.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Adventures with the Lily58 #2: The Diodes Strike Back</title>
      <link>http://www.example.com/posts/adventures-with-the-lily58-part-2/</link>
      <pubDate>Sun, 01 Dec 2019 00:00:00 -0500</pubDate>
      
      <guid>http://www.example.com/posts/adventures-with-the-lily58-part-2/</guid>
      <description>In the first part of this series, I went through the process of selecting a split keyboard. I decided to go with the Lily58. Now that the PCBs had arrived, I began to assemble the keyboard with some trepidation. The following build guides were quite helpful:
 kata0518&#39;s buildguide_en.md - the original build guide  I found out too late that the keyhive build guide I was using was outdated and missing some pictures.</description>
    </item>
    
    <item>
      <title>Adventures with the Lily58 #1: A New Keeb</title>
      <link>http://www.example.com/posts/adventures-with-the-lily58-part-1/</link>
      <pubDate>Thu, 21 Nov 2019 00:00:00 -0500</pubDate>
      
      <guid>http://www.example.com/posts/adventures-with-the-lily58-part-1/</guid>
      <description>My journey with mechanical keyboards began when I was an intern at a Big Chip Company TM. My coworker had just bought a Poker 2 and I was mesmerized by the precise and delicate &amp;ldquo;shicks&amp;rdquo; it produced, not to mention its sleek and compact profile.
Upon landing my first job, I bought my first mech keyboard, a KeyCool 84 with early Kailh brown switches. I was deeply disappointed - it was clunky and cheap feeling compared to the Poker.</description>
    </item>
    
    <item>
      <title>Tipping like it&#39;s 1989 (or: emacs iPhone &lt;3)</title>
      <link>http://www.example.com/posts/tippinglikeits1989/</link>
      <pubDate>Wed, 06 Nov 2019 00:00:00 -0500</pubDate>
      
      <guid>http://www.example.com/posts/tippinglikeits1989/</guid>
      <description>Long ago in the 1980&#39;s, the geeks of yore wielded RPN calculators such as the HP-42S at the local diner. Calculating tips since has never been so cool.
But what is RPN? RPN stands for &amp;ldquo;Reverse Polish Notation&amp;quot;, a syntax where operands are given before the operator. This is somewhat backwards compared to infix notation, which normal humans are used to, as well as prefix (aka &amp;ldquo;Polish&amp;rdquo;) notation, which is used in Lisp and other languages.</description>
    </item>
    
    <item>
      <title>Woah, git just wanna have func</title>
      <link>http://www.example.com/posts/git-funcs/</link>
      <pubDate>Fri, 11 Oct 2019 00:00:32 -0400</pubDate>
      
      <guid>http://www.example.com/posts/git-funcs/</guid>
      <description>Many developers, new and old, curse git from the depths of their bowels. However, once you get past the learning curve, it&#39;s surprisingly fun to tinker and automate common git tasks. The following are a collection of bash functions and aliases that accelerate my workflow considerably:
glS &amp;ldquo;git pickaxe with filter&amp;rdquo;
A lot of magic occurs when you combine fuzzy finders with git. But first,
@@@@@@@@^_^@@@@@@@@@@@@WAKE UP SHEEPLEWAKE UP SHEEPLEWAKE UP SHEEPLE You can search the diffs of all your commits with git log -G or git log -S.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://www.example.com/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.example.com/about/</guid>
      <description>Hi, I&#39;m Daniel Ting! Welcome to Super Pork Chop, my blog.
As a senior worker bee in a distant land of fire and ice, I teach young roombas the errors of their ways, so they may one day be released into the wild. Half of the time, I&#39;m like one of those horrible deep sea creatures that stay after 5:30 and dwell in the depths of Engineering, debugging nameless things. The rest of the time I float around in the clouds, sending email through the atmosphere and holding my nose while writing bash scripts.</description>
    </item>
    
  </channel>
</rss>