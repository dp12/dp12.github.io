<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>shellcode on Super Pork Chop</title>
    <link>http://www.example.com/tags/shellcode/</link>
    <description>Recent content in shellcode on Super Pork Chop</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 07 Aug 2020 00:00:00 -0400</lastBuildDate>
    
	<atom:link href="http://www.example.com/tags/shellcode/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Calling Conventions for Pwn and Profit</title>
      <link>http://www.example.com/posts/calling-conventions-for-pwn-and-profit/</link>
      <pubDate>Fri, 07 Aug 2020 00:00:00 -0400</pubDate>
      
      <guid>http://www.example.com/posts/calling-conventions-for-pwn-and-profit/</guid>
      <description>Shellcoders and reverse engineers often need intimate knowledge of the registers used in calling functions and syscalls. This is a compressed cheatsheet of some of the most important conventions with a light sprinkling of mnemonics and links to more detailed information.
NOTE: If there are more arguments than registers listed, the remaining arguments are passed on the stack (from right-to-left). Syscall information given is for Linux.
 table th:first-of-type { width: 30%; } table th:nth-of-type(2) { width: 70%; }  x86    Topic Description     argument passing (cdecl) all arguments passed on the stack   argument passing (stdcall) all arguments passed on the stack   argument passing (fastcall) ecx, edx   argument passing (thiscall) ecx gets &amp;ldquo;this&amp;rdquo; pointer; other arguments passed on the stack   return value eax   syscall argument passing ebx, ecx, edx, esi, edi, ebp</description>
    </item>
    
  </channel>
</rss>